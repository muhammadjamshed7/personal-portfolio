/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./utility/index.js":
/*!**************************!*\
  !*** ./utility/index.js ***!
  \**************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// function currentLinkService(ccc, e) {\n//   if (!e) {\n//     return false;\n//   }\n//   var topOff = e.getBoundingClientRect().top;\n//   var height = e.offsetHeight;\n//   var menuTop = document\n//     .querySelector(\".orido_tm_service .service_list\")\n//     .getBoundingClientRect().top;\n//   e.closest(\"li\").classList.remove(\"mleave\");\n//   var siblings = e.closest(\"li\").parentNode.children;\n//   Array.from(siblings).forEach(function (sibling) {\n//     if (sibling !== e.closest(\"li\")) {\n//       sibling.classList.add(\"mleave\");\n//     }\n//   });\n//   Array.from(ccc).forEach(function (item) {\n//     item.style.top = topOff - menuTop + \"px\";\n//     item.style.height = height + \"px\";\n//   });\n// }\n// function currentLink(ccc, e) {\n//   \"use strict\";\n//   if (!e) {\n//     return false;\n//   }\n//   var left = e.getBoundingClientRect().left;\n//   var width = e.offsetWidth;\n//   var menuLeft = document\n//     .querySelector(\".orido_tm_header .menu\")\n//     .getBoundingClientRect().left;\n//   Array.from(ccc).forEach(function (item) {\n//     item.style.left = left - menuLeft + \"px\";\n//     item.style.width = width + \"px\";\n//   });\n// }\n// function currentLink2(ccc, e) {\n//   if (!e) {\n//     return false;\n//   }\n//   var left = e.offsetLeft;\n//   var width = e.offsetWidth;\n//   ccc.style.left = left + \"px\";\n//   ccc.style.width = width + \"px\";\n// }\n// const hashtag = () => {\n//   const ccc = document.querySelector(\".orido_tm_header .menu .ccc\");\n//   const current = document.querySelector(\".orido_tm_header .menu .current a\");\n//   currentLink2(ccc, current);\n// };\n// function currentLinkFilter(ccc, e) {\n//   if (!e) {\n//     return false;\n//   }\n//   var left = e.offsetLeft;\n//   var width = e.offsetWidth + 80;\n//   var menuleft = document.querySelector(\n//     \".orido_tm_informations .right .filter\"\n//   ).offsetLeft;\n//   ccc.style.left = left - menuleft - 40 + \"px\";\n//   ccc.style.width = width + \"px\";\n//   // ccc.css({ left: left - menuleft - 40 + \"px\", width: width + \"px\" });\n// }\n// // export const oridoUtilits = {\n// //   dataImage() {\n// //     let d = document.querySelectorAll(\"[data-img-url\");\n// //     for (let i = 0; i < d.length; i++) {\n// //       const element = d[i];\n// //       element.style.backgroundImage = `url(${element.getAttribute(\n// //         \"data-img-url\"\n// //       )})`;\n// //     }\n// //   },\n// //   preloader() {\n// //     let isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(\n// //       navigator.userAgent\n// //     )\n// //       ? true\n// //       : false;\n// //     let preloader = document.getElementById(\"preloader\");\n// //     if (preloader) {\n// //       if (!isMobile) {\n// //         setTimeout(function () {\n// //           preloader.classList.add(\"preloaded\");\n// //         }, 800);\n// //         setTimeout(function () {\n// //           preloader.remove();\n// //         }, 2000);\n// //       } else {\n// //         preloader.remove();\n// //       }\n// //     }\n// //     setTimeout(() => {\n// //       document.querySelector(\"body\").classList.add(\"opened\");\n// //     }, 3000);\n// //     var speed = 1000;\n// //     setTimeout(function () {\n// //       var preloader = document.querySelector(\".waxon_tm_preloader\");\n// //       if (preloader) {\n// //         preloader.classList.add(\"loaded\");\n// //       }\n// //     }, speed);\n// //   },\n// //   imgToSVG() {\n// //     document.querySelectorAll(\"img.svg\").forEach((el) => {\n// //       const imgID = el.getAttribute(\"id\");\n// //       const imgClass = el.getAttribute(\"class\");\n// //       const imgURL = el.getAttribute(\"src\");\n// //       fetch(imgURL)\n// //         .then((data) => data.text())\n// //         .then((response) => {\n// //           const parser = new DOMParser();\n// //           const xmlDoc = parser.parseFromString(response, \"text/html\");\n// //           let svg = xmlDoc.querySelector(\"svg\");\n// //           // if (typeof imgID !== \"undefined\") {\n// //           //   svg.setAttribute(\"id\", imgID);\n// //           // }\n// //           if (typeof imgClass !== \"undefined\") {\n// //             svg.setAttribute(\"class\", imgClass + \" replaced-svg\");\n// //           }\n// //           svg.removeAttribute(\"xmlns:a\");\n// //           if (el.parentNode) {\n// //             el.parentNode.replaceChild(svg, el);\n// //           }\n// //         });\n// //     });\n// //   },\n// //   serviceHashtag() {\n// //     var ccc = document.querySelectorAll(\".orido_tm_service .ccc\");\n// //     var element = document.querySelector(\".orido_tm_service .current\");\n// //     var serviceListItems = document.querySelectorAll(\n// //       \".orido_tm_service .service_list ul li\"\n// //     );\n// //     serviceListItems.forEach(function (item) {\n// //       item.addEventListener(\"mouseenter\", function () {\n// //         var e = item;\n// //         currentLinkService(ccc, e);\n// //       });\n// //     });\n// //     var serviceList = document.querySelector(\".orido_tm_service .service_list\");\n// //     serviceList.addEventListener(\"mouseleave\", function () {\n// //       element = document.querySelector(\".orido_tm_service .current\");\n// //       currentLinkService(ccc, element);\n// //       var siblings = element.closest(\"li\").parentNode.children;\n// //       Array.from(siblings).forEach(function (sibling) {\n// //         if (sibling !== element.closest(\"li\")) {\n// //           sibling.classList.remove(\"mleave\");\n// //         }\n// //       });\n// //     });\n// //     currentLinkService(ccc, element);\n// //   },\n// //   stickyNav() {\n// //     let offset = window.scrollY;\n// //     const stickys = document.querySelectorAll(\".orido_tm_header\");\n// //     stickys.forEach((sticky) => {\n// //       if (sticky) {\n// //         if (offset > 100) {\n// //           sticky.classList.add(\"animate\");\n// //         } else {\n// //           sticky.classList.remove(\"animate\");\n// //         }\n// //       }\n// //     });\n// //   },\n// //   scrollSection() {\n// //     var ccc = document.querySelectorAll(\".orido_tm_header .menu .ccc\");\n// //     var element = document.querySelector(\".orido_tm_header .menu .current a\");\n// //     var menuLinks = document.querySelectorAll(\".orido_tm_header .menu a\");\n// //     menuLinks.forEach(function (item) {\n// //       item.addEventListener(\"mouseenter\", function () {\n// //         var e = item;\n// //         currentLink(ccc, e);\n// //       });\n// //     });\n// //     var menu = document.querySelector(\".orido_tm_header .menu\");\n// //     menu.addEventListener(\"mouseleave\", function () {\n// //       element = document.querySelector(\".orido_tm_header .menu .current a\");\n// //       currentLink(ccc, element);\n// //     });\n// //     currentLink(ccc, element);\n// //   },\n// //   sectionScroll() {\n// //     const sections = document.querySelectorAll(\".orido_tm_section\");\n// //     const navLi = document.querySelectorAll(\".anchor_nav li\");\n// //     let current = \"\";\n// //     sections.forEach((section) => {\n// //       const sectionTop = section.offsetTop;\n// //       const sectionHeight = section.clientHeight;\n// //       if (pageYOffset >= sectionTop - sectionHeight / 3) {\n// //         current = section.getAttribute(\"id\");\n// //       }\n// //     });\n// //     navLi.forEach((li) => {\n// //       if (current !== null) {\n// //         li.classList.remove(\"current\");\n// //       }\n// //       if (\n// //         li.getElementsByTagName(\"a\")[0].getAttribute(\"href\") == `#${current}`\n// //       ) {\n// //         li.classList.add(\"current\");\n// //       }\n// //     });\n// //     hashtag();\n// //   },\n// //   filter_hashtag() {\n// //     const ccc = document.querySelector(\n// //       \".orido_tm_informations .right .filter .ccc\"\n// //     );\n// //     const current = document.querySelector(\n// //       \".orido_tm_informations .right .filter .current\"\n// //     );\n// //     const a = document.querySelectorAll(\n// //       \".orido_tm_informations .right .filter a\"\n// //     );\n// //     const filter = document.querySelector(\n// //       \".orido_tm_informations .right .filter\"\n// //     );\n// //     a.forEach((e) => {\n// //       e.addEventListener(\"mouseenter\", () => {\n// //         currentLinkFilter(ccc, e);\n// //       });\n// //     });\n// //     filter.addEventListener(\"mouseleave\", () => {\n// //       currentLinkFilter(ccc, current);\n// //     });\n// //     currentLinkFilter(ccc, current);\n// //   },\n// //   customCursor() {\n// //     var myCursor = document.querySelectorAll(\".mouse-cursor\"),\n// //       hamburger = document.querySelector(\".hamburger\"),\n// //       kura_tm_topbar = document.querySelector(\".kura_tm_topbar \"),\n// //       pointer = document.querySelector(\".cursor-pointer\"),\n// //       e = document.querySelector(\".cursor-inner\"),\n// //       t = document.querySelector(\".cursor-outer\");\n// //     function mouseEvent(element) {\n// //       element.addEventListener(\"mouseenter\", function () {\n// //         e.classList.add(\"cursor-hover\"), t.classList.add(\"cursor-hover\");\n// //       });\n// //       element.addEventListener(\"mouseleave\", function () {\n// //         e.classList.remove(\"cursor-hover\"), t.classList.remove(\"cursor-hover\");\n// //       });\n// //     }\n// //     if (myCursor.length) {\n// //       if (document.body) {\n// //         let n,\n// //           i = 0,\n// //           o = !1;\n// //         (window.onmousemove = function (s) {\n// //           // console.log(document.querySelector(this));\n// //           o ||\n// //             (t.style.transform =\n// //               \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\"),\n// //             (e.style.transform =\n// //               \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\"),\n// //             (n = s.clientY),\n// //             (i = s.clientX);\n// //         }),\n// //           document.body.addEventListener(\n// //             \"mouseenter\",\n// //             // \"a,.kura_tm_topbar .trigger, .cursor-pointer\",\n// //             function () {\n// //               let a = document.querySelectorAll(\"a\");\n// //               e.classList.add(\"cursor-inner\"), t.classList.add(\"cursor-outer\");\n// //               for (let i = 0; i < a.length; i++) {\n// //                 const element = a[i];\n// //                 mouseEvent(element);\n// //               }\n// //               hamburger && mouseEvent(hamburger);\n// //               kura_tm_topbar && mouseEvent(kura_tm_topbar);\n// //               pointer && mouseEvent(pointer);\n// //             }\n// //           ),\n// //           (e.style.visibility = \"visible\"),\n// //           (t.style.visibility = \"visible\");\n// //       }\n// //     }\n// //   },\n// // };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utility/index.js\n"));

/***/ })

});